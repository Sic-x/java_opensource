<template>
	<section>
		<!--工具条-->
		<el-col :span="24" class="toolbar" style="padding-bottom: 0px;">
			<el-form :inline="true" :model="filters">
				<el-form-item>
					<el-input v-model="filters.keywords" placeholder="支付方式"></el-input>
				</el-form-item>
				<el-form-item>
					<el-button type="primary" v-on:click="getPays">查询</el-button>
				</el-form-item>
				<el-form-item>
					<el-button type="primary" @click="handleAdd">新增</el-button>
				</el-form-item>
			</el-form>
		</el-col>

		<!--列表-->
		<el-table :data="pays" highlight-current-row v-loading="listLoading" @selection-change="selsChange" style="width: 100%;">
			<el-table-column type="selection" >
			</el-table-column>
			<el-table-column type="index" label="编号" width="80px">
			</el-table-column>
			<el-table-column prop="paytypename" label="支付方式"  sortable>
			</el-table-column>


			<el-table-column label="操作" width="150">
				<template scope="scope">
					<el-button size="small" @click="handleEdit(scope.$index, scope.row)">编辑</el-button>
					<el-button type="danger" size="small" @click="handleDel(scope.$index, scope.row)">删除</el-button>
				</template>
			</el-table-column>
		</el-table>

		<!--工具条-->
		<el-col :span="24" class="toolbar">
			<el-button type="danger" @click="batchRemove" :disabled="this.sels.length===0">批量删除</el-button>
			<el-pagination layout="prev, pager, next"
			@current-change="handleCurrentChange"  :total="total"
			style="float:right;">
			</el-pagination>
		</el-col>

		<!--编辑界面-->
		<el-dialog title="编辑" v-model="editFormVisible" :close-on-click-modal="false">
			<el-form :model="editForm" label-width="80px" :rules="editFormRules" ref="editForm">
				<el-form-item label="支付方式" prop="paytypename">
					<el-input v-model="editForm.paytypename" auto-complete="off"></el-input>
				</el-form-item>
			</el-form>
			<div slot="footer" class="dialog-footer">
				<el-button @click.native="editFormVisible = false">取消</el-button>
				<el-button type="primary" @click.native="editSubmit" :loading="editLoading">提交</el-button>
			</div>
		</el-dialog>

		<!--新增界面-->
		<el-dialog title="新增" v-model="addFormVisible" :close-on-click-modal="false">
			<el-form :model="addForm" label-width="80px" :rules="addFormRules" ref="addForm">
				<el-form-item label="支付方式" prop="name">
					<el-input v-model="addForm.paytypename" auto-complete="off"></el-input>
				</el-form-item>


			</el-form>
			<div slot="footer" class="dialog-footer">
				<el-button @click.native="addFormVisible = false">取消</el-button>
				<el-button type="primary" @click.native="addSubmit" :loading="addLoading">提交</el-button>
			</div>
		</el-dialog>
	</section>
</template>

<script>
	import util from '../../common/js/util'
	//import NProgress from 'nprogress'
	import { getUserListPage, removeUser, batchRemoveUser, editUser, addUser } from '../../api/api';

	export default {
		data() {
			return {
				filters: {
                    keywords: ''
				},
				pays: [],
				total: 0,
				page: 1,
				listLoading: false,
				sels: [],//列表选中列

				editFormVisible: false,//编辑界面是否显示
				editLoading: false,
				editFormRules: {
                    paytypename: [
						{ required: true, message: '请输入支付方式', trigger: 'blur' }
					]
				},
				//编辑界面数据
				editForm: {
					id: 0,
                    paytypename: '',
				},

				addFormVisible: false,//新增界面是否显示
				addLoading: false,
				addFormRules: {
                    paytypename: [
						{ required: true, message: '请输入支付方式', trigger: 'blur' }
					]
				},
				//新增界面数据
				addForm: {
                    paytypename: '',
				}

			}
		},
		methods: {
			handleCurrentChange(val) {
				this.page = val;
				this.getPays();
			},
			//获取用户列表
			getPays() {
                let para = {
                    page: this.page,
                    keywords: this.filters.keywords
                };
				//加载属性
				this.listLoading = true;
                //NProgress.start();
				//getUserListPage(para).then((res) => {
				this.$http.patch('/pay',para).then((res) => {
                    this.pays = res.data.rows;
                    this.total = res.data.total;
                    this.listLoading = false;
					//NProgress.done();
				});
			},
			//删除
			handleDel: function (index, row) {
				this.$confirm('确认删除该记录吗?', '提示', {
					type: 'warning'
				}).then(() => {
					this.listLoading = true;
					//NProgress.start();
					let para = { id: row.id };
					//removeUser(para).then((res) => {
					this.$http.delete('/pay/'+row.id).then((res) => {
						this.listLoading = false;
						//NProgress.done();
						this.$message({
							message: '删除成功',
							type: 'success'
						});
						this.getPays();
					});
				}).catch(() => {

				});
			},
			//显示编辑界面
			handleEdit: function (index, row) {
				this.editFormVisible = true;
				this.editForm = Object.assign({}, row);
			},
			//显示新增界面
			handleAdd: function () {
				this.addFormVisible = true;
				//清空表单数据
				this.addForm = {
                    paytypename: '',

				};
			},
			//修改
			editSubmit: function () {
				this.$refs.editForm.validate((valid) => {
					if (valid) {
						this.$confirm('确认提交吗？', '提示', {}).then(() => {
							this.editLoading = true;
							//NProgress.start();
							let para = Object.assign({}, this.editForm);
							//editUser(para).then((res) => {
                            this.$http.post('/pay',para).then((res) => {
								this.editLoading = false;
								//NProgress.done();
								this.$message({
									message: '提交成功',
									type: 'success'
								});
								this.$refs['editForm'].resetFields();
								this.editFormVisible = false;
								this.getPays();
							});
						});
					}
				});
			},
			//新增
			addSubmit: function () {
				this.$refs.addForm.validate((valid) => {
					if (valid) {
						this.$confirm('确认提交吗？', '提示', {}).then(() => {
							this.addLoading = true;
							//NProgress.start();
							//assign拷贝 把form表单数据拷贝到新增对象里面
							let para = Object.assign({}, this.addForm);
							//addUser(para).then((res) => {
							this.$http.put('/pay',para).then((res) => {
								this.addLoading = false;
								//NProgress.done();
								this.$message({
									message: '提交成功',
									type: 'success'
								});
								this.$refs['addForm'].resetFields();
								this.addFormVisible = false;
								this.getPays();
							});
						});
					}
				});
			},
			selsChange: function (sels) {
				this.sels = sels;
			},
			//批量删除
            batchRemove: function () {
                //var ids = this.sels.map(item => item.id).toString();
                var ids = [];
                this.sels.forEach(item=>
                    ids.push(item.id)
                )
                this.$confirm('确认删除选中记录吗？', '提示', {
                    type: 'warning'
                }).then(() => {
                    this.listLoading = true;

                    //NProgress.start();
                    /*let para = {'ids':ids};
                    console.log(para);*/
                    //batchRemoveUser(para).then((res) => {
                    this.$http.delete('/pay/batchRemove?ids='+ids).then((res) => {
                        this.listLoading = false;
                        //NProgress.done();
                        this.$message({
                            message: '删除成功',
                            type: 'success'
                        });
                        this.getPays();
                    });
				}).catch(() => {

				});
			}
		},
		mounted() {
			this.getPays();
		}
	}

</script>

<style scoped>

</style>