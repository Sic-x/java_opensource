package com.xmh.crm.web.controller.login;


import com.xmh.crm.domain.employee.Employee;
import com.xmh.crm.shiro.util.UserContext;
import com.xmh.util.AjaxResult;
import org.apache.shiro.SecurityUtils;
import org.apache.shiro.authc.AuthenticationException;
import org.apache.shiro.authc.IncorrectCredentialsException;
import org.apache.shiro.authc.UnknownAccountException;
import org.apache.shiro.authc.UsernamePasswordToken;
import org.apache.shiro.subject.Subject;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.HashMap;
import java.util.Map;

@Controller
@CrossOrigin
public class LoginController {

    @RequestMapping(value = "/login",method = RequestMethod.POST)
    @ResponseBody
    public AjaxResult login(@RequestBody Employee employee){
          //拿到主体subject
        Subject subject = SecurityUtils.getSubject();

        //判断subject是否认证过
        if(!subject.isAuthenticated()){
            //如果没有认证 就去登录认证
            //如果认证过，返回到前台
            UsernamePasswordToken token = new UsernamePasswordToken(employee.getUsername(), employee.getPassword());
            try {
                subject.login(token);
            } catch (UnknownAccountException e) {
                e.printStackTrace();
                return new AjaxResult("用户不存在");
            } catch (IncorrectCredentialsException e){
                e.printStackTrace();
                return new AjaxResult("密码错误");
            } catch (AuthenticationException e){
                e.printStackTrace();
                return  new AjaxResult("其他认证异常");
            }
        }

        //把employee信息传到前台，前台放入session(前台session)
        Employee employee1 = (Employee)subject.getPrincipal();
        UserContext.setUser(employee1);
        AjaxResult ajaxResult = new AjaxResult();
        Map mp = new HashMap<>();
        mp.put("user",employee1);
        //jsessionid -->token
        mp.put("token",subject.getSession().getId());
        ajaxResult.setResultObj(mp);
        //返回对象
        return ajaxResult;
    }
}
