<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"

       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd

">


    <!--配置顺序
        1. db.properties
        2. dataSource 配置数据源 连接池 dbcp 常用数据库之一
        3. EntityManagerFactory
        4. dao service
        5. 事务
        6. action
        7. easyUI

    -->
    <!--不进行业务层和持久层包扫描在使用自动注入该类会报错-->
    <!--
        Could not autowire. No beans of 'IEmployeeDao' type found.
        Checks autowiring problems in a bean class.
    -->
    <!--扫描dao层的类-->
    <context:component-scan base-package="cn.itsource.dao" />
    <!--扫描service层的类-->
    <context:component-scan base-package="cn.itsource.service" />

    <!--读取配置文件,必须要加上classpath-->
    <context:property-placeholder location="classpath:db.properties"></context:property-placeholder>

    <!--2.通过db.properties文件配置dbcp连接池-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <!--配置文件中的键值对-->
        <!--为了不与其他配置文件冲突前加jdbc-->
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--
        3.配置EntityManagerFactory对象
            基本配置由Spring创建对象(四个数据库连接参数,建表策略,数据库方言,是否显示SQL语句)
            如果运行测试创建了实体类的表,就代表对象创建成功
            alt+insert JPA LocalContainerEntityManagerFactoryBean
    -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--必须配置包扫描才能开启对JPA的注解的支持-->
        <property name="packagesToScan" value="cn.itsource.domain"/>
        <!--声明完成JPA规范的框架-->
        <!--配置适配器(hibernate)-->
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <!--数据库方言-->
                <property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect"/>
                <!--建表策略-->
                <!--
                    true=update false=none
                -->
                <property name="generateDdl" value="true"/>
                <!--是否显示SQL语句-->
                <property name="showSql" value="true"/>
            </bean>
        </property>
    </bean>

    <!--如果不添加事务进行CRUD方法不能执行成功会报错-->
    <!--
        1. 添加事务管理器
        2. 开启注解版事物的支持
    -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <tx:annotation-driven/>
</beans>